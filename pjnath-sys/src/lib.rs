/* automatically generated by rust-bindgen 0.58.1 */

#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
extern crate pj_sys;
extern crate pjlib_util_sys;
use pj_sys::*;
use pjlib_util_sys::*;

extern "C" {
    pub fn pjnath_init() -> pj_status_t;
}
extern "C" {
    pub fn pjnath_perror(
        sender: *const ::std::os::raw::c_char,
        title: *const ::std::os::raw::c_char,
        status: pj_status_t,
    );
}
extern "C" {
    pub fn pj_stun_get_method_name(
        msg_type: ::std::os::raw::c_uint,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_stun_get_class_name(
        msg_type: ::std::os::raw::c_uint,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_stun_get_attr_name(
        attr_type: ::std::os::raw::c_uint,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_stun_get_err_reason(err_code: ::std::os::raw::c_int) -> pj_str_t;
}
extern "C" {
    pub fn pj_stun_set_padding_char(chr: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn pj_stun_msg_init(
        msg: *mut pj_stun_msg,
        msg_type: ::std::os::raw::c_uint,
        magic: pj_uint32_t,
        tsx_id: *const pj_uint8_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_create(
        pool: *mut pj_pool_t,
        msg_type: ::std::os::raw::c_uint,
        magic: pj_uint32_t,
        tsx_id: *const pj_uint8_t,
        p_msg: *mut *mut pj_stun_msg,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_clone(pool: *mut pj_pool_t, msg: *const pj_stun_msg) -> *mut pj_stun_msg;
}
extern "C" {
    pub fn pj_stun_msg_create_response(
        pool: *mut pj_pool_t,
        req_msg: *const pj_stun_msg,
        err_code: ::std::os::raw::c_uint,
        err_msg: *const pj_str_t,
        p_response: *mut *mut pj_stun_msg,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_attr(msg: *mut pj_stun_msg, attr: *mut pj_stun_attr_hdr) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_encode(
        msg: *mut pj_stun_msg,
        pkt_buf: *mut pj_uint8_t,
        buf_size: pj_size_t,
        options: ::std::os::raw::c_uint,
        key: *const pj_str_t,
        p_msg_len: *mut pj_size_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_check(
        pdu: *const pj_uint8_t,
        pdu_len: pj_size_t,
        options: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_decode(
        pool: *mut pj_pool_t,
        pdu: *const pj_uint8_t,
        pdu_len: pj_size_t,
        options: ::std::os::raw::c_uint,
        p_msg: *mut *mut pj_stun_msg,
        p_parsed_len: *mut pj_size_t,
        p_response: *mut *mut pj_stun_msg,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_dump(
        msg: *const pj_stun_msg,
        buffer: *mut ::std::os::raw::c_char,
        length: ::std::os::raw::c_uint,
        printed_len: *mut ::std::os::raw::c_uint,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_stun_msg_find_attr(
        msg: *const pj_stun_msg,
        attr_type: ::std::os::raw::c_int,
        start_index: ::std::os::raw::c_uint,
    ) -> *mut pj_stun_attr_hdr;
}
extern "C" {
    pub fn pj_stun_attr_clone(
        pool: *mut pj_pool_t,
        attr: *const pj_stun_attr_hdr,
    ) -> *mut pj_stun_attr_hdr;
}
extern "C" {
    pub fn pj_stun_sockaddr_attr_init(
        attr: *mut pj_stun_sockaddr_attr,
        attr_type: ::std::os::raw::c_int,
        xor_ed: pj_bool_t,
        addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_sockaddr_attr_create(
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        xor_ed: pj_bool_t,
        addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
        p_attr: *mut *mut pj_stun_sockaddr_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_sockaddr_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        attr_type: ::std::os::raw::c_int,
        xor_ed: pj_bool_t,
        addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_string_attr_init(
        attr: *mut pj_stun_string_attr,
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        value: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_string_attr_create(
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        value: *const pj_str_t,
        p_attr: *mut *mut pj_stun_string_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_string_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        attr_type: ::std::os::raw::c_int,
        value: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_uint_attr_create(
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        value: pj_uint32_t,
        p_attr: *mut *mut pj_stun_uint_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_uint_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        attr_type: ::std::os::raw::c_int,
        value: pj_uint32_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_uint64_attr_create(
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        value: *const pj_timestamp,
        p_attr: *mut *mut pj_stun_uint64_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_uint64_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        attr_type: ::std::os::raw::c_int,
        value: *const pj_timestamp,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msgint_attr_create(
        pool: *mut pj_pool_t,
        p_attr: *mut *mut pj_stun_msgint_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_msgint_attr(pool: *mut pj_pool_t, msg: *mut pj_stun_msg) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_errcode_attr_create(
        pool: *mut pj_pool_t,
        err_code: ::std::os::raw::c_int,
        err_reason: *const pj_str_t,
        p_attr: *mut *mut pj_stun_errcode_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_errcode_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        err_code: ::std::os::raw::c_int,
        err_reason: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_unknown_attr_create(
        pool: *mut pj_pool_t,
        attr_cnt: ::std::os::raw::c_uint,
        attr: *const pj_uint16_t,
        p_attr: *mut *mut pj_stun_unknown_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_unknown_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        attr_cnt: ::std::os::raw::c_uint,
        attr: *const pj_uint16_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_binary_attr_init(
        attr: *mut pj_stun_binary_attr,
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        data: *const pj_uint8_t,
        length: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_binary_attr_create(
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        data: *const pj_uint8_t,
        length: ::std::os::raw::c_uint,
        p_attr: *mut *mut pj_stun_binary_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_binary_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        attr_type: ::std::os::raw::c_int,
        data: *const pj_uint8_t,
        length: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_empty_attr_create(
        pool: *mut pj_pool_t,
        attr_type: ::std::os::raw::c_int,
        p_attr: *mut *mut pj_stun_empty_attr,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_add_empty_attr(
        pool: *mut pj_pool_t,
        msg: *mut pj_stun_msg,
        attr_type: ::std::os::raw::c_int,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_auth_cred_dup(
        pool: *mut pj_pool_t,
        dst: *mut pj_stun_auth_cred,
        src: *const pj_stun_auth_cred,
    );
}
extern "C" {
    pub fn pj_stun_req_cred_info_dup(
        pool: *mut pj_pool_t,
        dst: *mut pj_stun_req_cred_info,
        src: *const pj_stun_req_cred_info,
    );
}
extern "C" {
    pub fn pj_stun_create_key(
        pool: *mut pj_pool_t,
        key: *mut pj_str_t,
        realm: *const pj_str_t,
        username: *const pj_str_t,
        data_type: pj_stun_passwd_type,
        data: *const pj_str_t,
    );
}
extern "C" {
    pub fn pj_stun_authenticate_request(
        pkt: *const pj_uint8_t,
        pkt_len: ::std::os::raw::c_uint,
        msg: *const pj_stun_msg,
        cred: *mut pj_stun_auth_cred,
        pool: *mut pj_pool_t,
        info: *mut pj_stun_req_cred_info,
        p_response: *mut *mut pj_stun_msg,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_auth_valid_for_msg(msg: *const pj_stun_msg) -> pj_bool_t;
}
extern "C" {
    pub fn pj_stun_authenticate_response(
        pkt: *const pj_uint8_t,
        pkt_len: ::std::os::raw::c_uint,
        msg: *const pj_stun_msg,
        key: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_create(
        cfg: *mut pj_stun_config,
        pool: *mut pj_pool_t,
        grp_lock: *mut pj_grp_lock_t,
        cb: *const pj_stun_tsx_cb,
        p_tsx: *mut *mut pj_stun_client_tsx,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_schedule_destroy(
        tsx: *mut pj_stun_client_tsx,
        delay: *const pj_time_val,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_destroy(tsx: *mut pj_stun_client_tsx) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_stop(tsx: *mut pj_stun_client_tsx) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_is_complete(tsx: *mut pj_stun_client_tsx) -> pj_bool_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_set_data(
        tsx: *mut pj_stun_client_tsx,
        data: *mut ::std::os::raw::c_void,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_get_data(tsx: *mut pj_stun_client_tsx)
        -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn pj_stun_client_tsx_send_msg(
        tsx: *mut pj_stun_client_tsx,
        retransmit: pj_bool_t,
        pkt: *mut ::std::os::raw::c_void,
        pkt_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_retransmit(
        tsx: *mut pj_stun_client_tsx,
        mod_count: pj_bool_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_client_tsx_on_rx_msg(
        tsx: *mut pj_stun_client_tsx,
        msg: *const pj_stun_msg,
        src_addr: *const pj_sockaddr_t,
        src_addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_create(
        cfg: *mut pj_stun_config,
        name: *const ::std::os::raw::c_char,
        cb: *const pj_stun_session_cb,
        fingerprint: pj_bool_t,
        grp_lock: *mut pj_grp_lock_t,
        p_sess: *mut *mut pj_stun_session,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_destroy(sess: *mut pj_stun_session) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_set_user_data(
        sess: *mut pj_stun_session,
        user_data: *mut ::std::os::raw::c_void,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_get_user_data(sess: *mut pj_stun_session)
        -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn pj_stun_session_get_grp_lock(sess: *mut pj_stun_session) -> *mut pj_grp_lock_t;
}
extern "C" {
    pub fn pj_stun_session_set_software_name(
        sess: *mut pj_stun_session,
        sw: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_set_credential(
        sess: *mut pj_stun_session,
        auth_type: pj_stun_auth_type,
        cred: *const pj_stun_auth_cred,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_set_log(sess: *mut pj_stun_session, flags: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn pj_stun_session_use_fingerprint(
        sess: *mut pj_stun_session,
        use_: pj_bool_t,
    ) -> pj_bool_t;
}
extern "C" {
    pub fn pj_stun_session_create_req(
        sess: *mut pj_stun_session,
        msg_type: ::std::os::raw::c_int,
        magic: pj_uint32_t,
        tsx_id: *const pj_uint8_t,
        p_tdata: *mut *mut pj_stun_tx_data,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_create_ind(
        sess: *mut pj_stun_session,
        msg_type: ::std::os::raw::c_int,
        p_tdata: *mut *mut pj_stun_tx_data,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_create_res(
        sess: *mut pj_stun_session,
        rdata: *const pj_stun_rx_data,
        err_code: ::std::os::raw::c_uint,
        err_msg: *const pj_str_t,
        p_tdata: *mut *mut pj_stun_tx_data,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_send_msg(
        sess: *mut pj_stun_session,
        token: *mut ::std::os::raw::c_void,
        cache_res: pj_bool_t,
        retransmit: pj_bool_t,
        dst_addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
        tdata: *mut pj_stun_tx_data,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_respond(
        sess: *mut pj_stun_session,
        rdata: *const pj_stun_rx_data,
        code: ::std::os::raw::c_uint,
        err_msg: *const ::std::os::raw::c_char,
        token: *mut ::std::os::raw::c_void,
        cache: pj_bool_t,
        dst_addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_cancel_req(
        sess: *mut pj_stun_session,
        tdata: *mut pj_stun_tx_data,
        notify: pj_bool_t,
        status: pj_status_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_retransmit_req(
        sess: *mut pj_stun_session,
        tdata: *mut pj_stun_tx_data,
        mod_count: pj_bool_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_session_on_rx_pkt(
        sess: *mut pj_stun_session,
        packet: *const ::std::os::raw::c_void,
        pkt_size: pj_size_t,
        options: ::std::os::raw::c_uint,
        token: *mut ::std::os::raw::c_void,
        parsed_len: *mut pj_size_t,
        src_addr: *const pj_sockaddr_t,
        src_addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_msg_destroy_tdata(sess: *mut pj_stun_session, tdata: *mut pj_stun_tx_data);
}
extern "C" {
    pub fn pj_ice_get_cand_type_name(type_: pj_ice_cand_type) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_ice_sess_role_name(role: pj_ice_sess_role) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_ice_calc_foundation(
        pool: *mut pj_pool_t,
        foundation: *mut pj_str_t,
        type_: pj_ice_cand_type,
        base_addr: *const pj_sockaddr,
    );
}
extern "C" {
    pub fn pj_ice_sess_options_default(opt: *mut pj_ice_sess_options);
}
extern "C" {
    pub fn pj_ice_sess_create(
        stun_cfg: *mut pj_stun_config,
        name: *const ::std::os::raw::c_char,
        role: pj_ice_sess_role,
        comp_cnt: ::std::os::raw::c_uint,
        cb: *const pj_ice_sess_cb,
        local_ufrag: *const pj_str_t,
        local_passwd: *const pj_str_t,
        grp_lock: *mut pj_grp_lock_t,
        p_ice: *mut *mut pj_ice_sess,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_get_options(
        ice: *mut pj_ice_sess,
        opt: *mut pj_ice_sess_options,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_set_options(
        ice: *mut pj_ice_sess,
        opt: *const pj_ice_sess_options,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_destroy(ice: *mut pj_ice_sess) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_change_role(
        ice: *mut pj_ice_sess,
        new_role: pj_ice_sess_role,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_set_prefs(ice: *mut pj_ice_sess, prefs: *const pj_uint8_t) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_add_cand(
        ice: *mut pj_ice_sess,
        comp_id: ::std::os::raw::c_uint,
        transport_id: ::std::os::raw::c_uint,
        type_: pj_ice_cand_type,
        local_pref: pj_uint16_t,
        foundation: *const pj_str_t,
        addr: *const pj_sockaddr_t,
        base_addr: *const pj_sockaddr_t,
        rel_addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_int,
        p_cand_id: *mut ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_find_default_cand(
        ice: *mut pj_ice_sess,
        comp_id: ::std::os::raw::c_uint,
        p_cand_id: *mut ::std::os::raw::c_int,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_create_check_list(
        ice: *mut pj_ice_sess,
        rem_ufrag: *const pj_str_t,
        rem_passwd: *const pj_str_t,
        rem_cand_cnt: ::std::os::raw::c_uint,
        rem_cand: *const pj_ice_sess_cand,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_update_check_list(
        ice: *mut pj_ice_sess,
        rem_ufrag: *const pj_str_t,
        rem_passwd: *const pj_str_t,
        rem_cand_cnt: ::std::os::raw::c_uint,
        rem_cand: *const pj_ice_sess_cand,
        trickle_done: pj_bool_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_start_check(ice: *mut pj_ice_sess) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_send_data(
        ice: *mut pj_ice_sess,
        comp_id: ::std::os::raw::c_uint,
        data: *const ::std::os::raw::c_void,
        data_len: pj_size_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_sess_on_rx_pkt(
        ice: *mut pj_ice_sess,
        comp_id: ::std::os::raw::c_uint,
        transport_id: ::std::os::raw::c_uint,
        pkt: *mut ::std::os::raw::c_void,
        pkt_size: pj_size_t,
        src_addr: *const pj_sockaddr_t,
        src_addr_len: ::std::os::raw::c_int,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_sock_op_name(op: pj_stun_sock_op) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_stun_sock_cfg_default(cfg: *mut pj_stun_sock_cfg);
}
extern "C" {
    pub fn pj_stun_sock_create(
        stun_cfg: *mut pj_stun_config,
        name: *const ::std::os::raw::c_char,
        af: ::std::os::raw::c_int,
        cb: *const pj_stun_sock_cb,
        cfg: *const pj_stun_sock_cfg,
        user_data: *mut ::std::os::raw::c_void,
        p_sock: *mut *mut pj_stun_sock,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_sock_start(
        stun_sock: *mut pj_stun_sock,
        domain: *const pj_str_t,
        default_port: pj_uint16_t,
        resolver: *mut pj_dns_resolver,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_sock_destroy(sock: *mut pj_stun_sock) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_sock_set_user_data(
        stun_sock: *mut pj_stun_sock,
        user_data: *mut ::std::os::raw::c_void,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_sock_get_user_data(stun_sock: *mut pj_stun_sock) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn pj_stun_sock_get_grp_lock(stun_sock: *mut pj_stun_sock) -> *mut pj_grp_lock_t;
}
extern "C" {
    pub fn pj_stun_sock_get_info(
        stun_sock: *mut pj_stun_sock,
        info: *mut pj_stun_sock_info,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_sock_sendto(
        stun_sock: *mut pj_stun_sock,
        send_key: *mut pj_ioqueue_op_key_t,
        pkt: *const ::std::os::raw::c_void,
        pkt_len: ::std::os::raw::c_uint,
        flag: ::std::os::raw::c_uint,
        dst_addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_alloc_param_default(prm: *mut pj_turn_alloc_param);
}
extern "C" {
    pub fn pj_turn_alloc_param_copy(
        pool: *mut pj_pool_t,
        dst: *mut pj_turn_alloc_param,
        src: *const pj_turn_alloc_param,
    );
}
extern "C" {
    pub fn pj_turn_state_name(state: pj_turn_state_t) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_turn_session_create(
        cfg: *const pj_stun_config,
        name: *const ::std::os::raw::c_char,
        af: ::std::os::raw::c_int,
        conn_type: pj_turn_tp_type,
        grp_lock: *mut pj_grp_lock_t,
        cb: *const pj_turn_session_cb,
        options: ::std::os::raw::c_uint,
        user_data: *mut ::std::os::raw::c_void,
        p_sess: *mut *mut pj_turn_session,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_shutdown(sess: *mut pj_turn_session) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_destroy(
        sess: *mut pj_turn_session,
        last_err: pj_status_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_get_info(
        sess: *mut pj_turn_session,
        info: *mut pj_turn_session_info,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_set_user_data(
        sess: *mut pj_turn_session,
        user_data: *mut ::std::os::raw::c_void,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_get_user_data(sess: *mut pj_turn_session)
        -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn pj_turn_session_get_grp_lock(sess: *mut pj_turn_session) -> *mut pj_grp_lock_t;
}
extern "C" {
    pub fn pj_turn_session_set_log(sess: *mut pj_turn_session, flags: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn pj_turn_session_set_software_name(
        sess: *mut pj_turn_session,
        sw: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_set_server(
        sess: *mut pj_turn_session,
        domain: *const pj_str_t,
        default_port: ::std::os::raw::c_int,
        resolver: *mut pj_dns_resolver,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_set_credential(
        sess: *mut pj_turn_session,
        cred: *const pj_stun_auth_cred,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_alloc(
        sess: *mut pj_turn_session,
        param: *const pj_turn_alloc_param,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_set_perm(
        sess: *mut pj_turn_session,
        addr_cnt: ::std::os::raw::c_uint,
        addr: *const pj_sockaddr,
        options: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_sendto(
        sess: *mut pj_turn_session,
        pkt: *const pj_uint8_t,
        pkt_len: ::std::os::raw::c_uint,
        peer_addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_bind_channel(
        sess: *mut pj_turn_session,
        peer: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_on_rx_pkt(
        sess: *mut pj_turn_session,
        pkt: *mut ::std::os::raw::c_void,
        pkt_len: pj_size_t,
        parsed_len: *mut pj_size_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_on_rx_pkt2(
        sess: *mut pj_turn_session,
        prm: *mut pj_turn_session_on_rx_pkt_param,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_session_connection_bind(
        sess: *mut pj_turn_session,
        pool: *mut pj_pool_t,
        conn_id: pj_uint32_t,
        peer_addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_tls_cfg_default(tls_cfg: *mut pj_turn_sock_tls_cfg);
}
extern "C" {
    pub fn pj_turn_sock_tls_cfg_dup(
        pool: *mut pj_pool_t,
        dst: *mut pj_turn_sock_tls_cfg,
        src: *const pj_turn_sock_tls_cfg,
    );
}
extern "C" {
    pub fn pj_turn_sock_tls_cfg_wipe_keys(tls_cfg: *mut pj_turn_sock_tls_cfg);
}
extern "C" {
    pub fn pj_turn_sock_cfg_default(cfg: *mut pj_turn_sock_cfg);
}
extern "C" {
    pub fn pj_turn_sock_create(
        cfg: *mut pj_stun_config,
        af: ::std::os::raw::c_int,
        conn_type: pj_turn_tp_type,
        cb: *const pj_turn_sock_cb,
        setting: *const pj_turn_sock_cfg,
        user_data: *mut ::std::os::raw::c_void,
        p_turn_sock: *mut *mut pj_turn_sock,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_destroy(turn_sock: *mut pj_turn_sock);
}
extern "C" {
    pub fn pj_turn_sock_set_user_data(
        turn_sock: *mut pj_turn_sock,
        user_data: *mut ::std::os::raw::c_void,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_get_user_data(turn_sock: *mut pj_turn_sock) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn pj_turn_sock_get_grp_lock(turn_sock: *mut pj_turn_sock) -> *mut pj_grp_lock_t;
}
extern "C" {
    pub fn pj_turn_sock_get_info(
        turn_sock: *mut pj_turn_sock,
        info: *mut pj_turn_session_info,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_lock(turn_sock: *mut pj_turn_sock) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_unlock(turn_sock: *mut pj_turn_sock) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_set_log(turn_sock: *mut pj_turn_sock, flags: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn pj_turn_sock_set_software_name(
        turn_sock: *mut pj_turn_sock,
        sw: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_alloc(
        turn_sock: *mut pj_turn_sock,
        domain: *const pj_str_t,
        default_port: ::std::os::raw::c_int,
        resolver: *mut pj_dns_resolver,
        cred: *const pj_stun_auth_cred,
        param: *const pj_turn_alloc_param,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_set_perm(
        turn_sock: *mut pj_turn_sock,
        addr_cnt: ::std::os::raw::c_uint,
        addr: *const pj_sockaddr,
        options: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_sendto(
        turn_sock: *mut pj_turn_sock,
        pkt: *const pj_uint8_t,
        pkt_len: ::std::os::raw::c_uint,
        peer_addr: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_turn_sock_bind_channel(
        turn_sock: *mut pj_turn_sock,
        peer: *const pj_sockaddr_t,
        addr_len: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_cfg_default(cfg: *mut pj_ice_strans_cfg);
}
extern "C" {
    pub fn pj_ice_strans_stun_cfg_default(cfg: *mut pj_ice_strans_stun_cfg);
}
extern "C" {
    pub fn pj_ice_strans_turn_cfg_default(cfg: *mut pj_ice_strans_turn_cfg);
}
extern "C" {
    pub fn pj_ice_strans_cfg_copy(
        pool: *mut pj_pool_t,
        dst: *mut pj_ice_strans_cfg,
        src: *const pj_ice_strans_cfg,
    );
}
extern "C" {
    pub fn pj_ice_strans_create(
        name: *const ::std::os::raw::c_char,
        cfg: *const pj_ice_strans_cfg,
        comp_cnt: ::std::os::raw::c_uint,
        user_data: *mut ::std::os::raw::c_void,
        cb: *const pj_ice_strans_cb,
        p_ice_st: *mut *mut pj_ice_strans,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_get_state(ice_st: *mut pj_ice_strans) -> pj_ice_strans_state;
}
extern "C" {
    pub fn pj_ice_strans_state_name(state: pj_ice_strans_state) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_ice_strans_destroy(ice_st: *mut pj_ice_strans) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_get_user_data(ice_st: *mut pj_ice_strans) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn pj_ice_strans_get_options(
        ice_st: *mut pj_ice_strans,
        opt: *mut pj_ice_sess_options,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_set_options(
        ice_st: *mut pj_ice_strans,
        opt: *const pj_ice_sess_options,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_update_comp_cnt(
        ice_st: *mut pj_ice_strans,
        comp_cnt: ::std::os::raw::c_uint,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_get_grp_lock(ice_st: *mut pj_ice_strans) -> *mut pj_grp_lock_t;
}
extern "C" {
    pub fn pj_ice_strans_init_ice(
        ice_st: *mut pj_ice_strans,
        role: pj_ice_sess_role,
        local_ufrag: *const pj_str_t,
        local_passwd: *const pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_has_sess(ice_st: *mut pj_ice_strans) -> pj_bool_t;
}
extern "C" {
    pub fn pj_ice_strans_sess_is_running(ice_st: *mut pj_ice_strans) -> pj_bool_t;
}
extern "C" {
    pub fn pj_ice_strans_sess_is_complete(ice_st: *mut pj_ice_strans) -> pj_bool_t;
}
extern "C" {
    pub fn pj_ice_strans_get_running_comp_cnt(ice_st: *mut pj_ice_strans)
        -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn pj_ice_strans_get_ufrag_pwd(
        ice_st: *mut pj_ice_strans,
        loc_ufrag: *mut pj_str_t,
        loc_pwd: *mut pj_str_t,
        rem_ufrag: *mut pj_str_t,
        rem_pwd: *mut pj_str_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_get_cands_count(
        ice_st: *mut pj_ice_strans,
        comp_id: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn pj_ice_strans_enum_cands(
        ice_st: *mut pj_ice_strans,
        comp_id: ::std::os::raw::c_uint,
        count: *mut ::std::os::raw::c_uint,
        cand: *mut pj_ice_sess_cand,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_get_def_cand(
        ice_st: *mut pj_ice_strans,
        comp_id: ::std::os::raw::c_uint,
        cand: *mut pj_ice_sess_cand,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_get_role(ice_st: *mut pj_ice_strans) -> pj_ice_sess_role;
}
extern "C" {
    pub fn pj_ice_strans_change_role(
        ice_st: *mut pj_ice_strans,
        new_role: pj_ice_sess_role,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_start_ice(
        ice_st: *mut pj_ice_strans,
        rem_ufrag: *const pj_str_t,
        rem_passwd: *const pj_str_t,
        rcand_cnt: ::std::os::raw::c_uint,
        rcand: *const pj_ice_sess_cand,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_update_check_list(
        ice_st: *mut pj_ice_strans,
        rem_ufrag: *const pj_str_t,
        rem_passwd: *const pj_str_t,
        rcand_cnt: ::std::os::raw::c_uint,
        rcand: *const pj_ice_sess_cand,
        rcand_end: pj_bool_t,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_get_valid_pair(
        ice_st: *const pj_ice_strans,
        comp_id: ::std::os::raw::c_uint,
    ) -> *const pj_ice_sess_check;
}
extern "C" {
    pub fn pj_ice_strans_stop_ice(ice_st: *mut pj_ice_strans) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_sendto(
        ice_st: *mut pj_ice_strans,
        comp_id: ::std::os::raw::c_uint,
        data: *const ::std::os::raw::c_void,
        data_len: pj_size_t,
        dst_addr: *const pj_sockaddr_t,
        dst_addr_len: ::std::os::raw::c_int,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_ice_strans_sendto2(
        ice_st: *mut pj_ice_strans,
        comp_id: ::std::os::raw::c_uint,
        data: *const ::std::os::raw::c_void,
        data_len: pj_size_t,
        dst_addr: *const pj_sockaddr_t,
        dst_addr_len: ::std::os::raw::c_int,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_get_nat_name(type_: pj_stun_nat_type) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn pj_stun_detect_nat_type(
        server: *const pj_sockaddr_in,
        stun_cfg: *mut pj_stun_config,
        user_data: *mut ::std::os::raw::c_void,
        cb: pj_stun_nat_detect_cb,
    ) -> pj_status_t;
}
extern "C" {
    pub fn pj_stun_detect_nat_type2(
        server: *const pj_sockaddr,
        stun_cfg: *mut pj_stun_config,
        user_data: *mut ::std::os::raw::c_void,
        cb: pj_stun_nat_detect_cb,
    ) -> pj_status_t;
}
