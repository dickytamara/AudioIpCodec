#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]

extern crate pj_sys;
extern crate pjmedia_sys;

use pj_sys::*;
use pjmedia_sys::*;

/* automatically generated by rust-bindgen 0.58.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pjmedia_aud_dev_factory_op {
    pub init:
        ::std::option::Option<unsafe extern "C" fn(f: *mut pjmedia_aud_dev_factory) -> pj_status_t>,
    pub destroy:
        ::std::option::Option<unsafe extern "C" fn(f: *mut pjmedia_aud_dev_factory) -> pj_status_t>,
    pub get_dev_count: ::std::option::Option<
        unsafe extern "C" fn(f: *mut pjmedia_aud_dev_factory) -> ::std::os::raw::c_uint,
    >,
    pub get_dev_info: ::std::option::Option<
        unsafe extern "C" fn(
            f: *mut pjmedia_aud_dev_factory,
            index: ::std::os::raw::c_uint,
            info: *mut pjmedia_aud_dev_info,
        ) -> pj_status_t,
    >,
    pub default_param: ::std::option::Option<
        unsafe extern "C" fn(
            f: *mut pjmedia_aud_dev_factory,
            index: ::std::os::raw::c_uint,
            param: *mut pjmedia_aud_param,
        ) -> pj_status_t,
    >,
    pub create_stream: ::std::option::Option<
        unsafe extern "C" fn(
            f: *mut pjmedia_aud_dev_factory,
            param: *const pjmedia_aud_param,
            rec_cb: pjmedia_aud_rec_cb,
            play_cb: pjmedia_aud_play_cb,
            user_data: *mut ::std::os::raw::c_void,
            p_aud_strm: *mut *mut pjmedia_aud_stream,
        ) -> pj_status_t,
    >,
    pub refresh:
        ::std::option::Option<unsafe extern "C" fn(f: *mut pjmedia_aud_dev_factory) -> pj_status_t>,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pjmedia_aud_dev_factory__bindgen_ty_1 {
    pub drv_idx: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pjmedia_aud_stream_op {
    pub get_param: ::std::option::Option<
        unsafe extern "C" fn(
            strm: *mut pjmedia_aud_stream,
            param: *mut pjmedia_aud_param,
        ) -> pj_status_t,
    >,
    pub get_cap: ::std::option::Option<
        unsafe extern "C" fn(
            strm: *mut pjmedia_aud_stream,
            cap: pjmedia_aud_dev_cap,
            value: *mut ::std::os::raw::c_void,
        ) -> pj_status_t,
    >,
    pub set_cap: ::std::option::Option<
        unsafe extern "C" fn(
            strm: *mut pjmedia_aud_stream,
            cap: pjmedia_aud_dev_cap,
            value: *const ::std::os::raw::c_void,
        ) -> pj_status_t,
    >,
    pub start:
        ::std::option::Option<unsafe extern "C" fn(strm: *mut pjmedia_aud_stream) -> pj_status_t>,
    pub stop:
        ::std::option::Option<unsafe extern "C" fn(strm: *mut pjmedia_aud_stream) -> pj_status_t>,
    pub destroy:
        ::std::option::Option<unsafe extern "C" fn(strm: *mut pjmedia_aud_stream) -> pj_status_t>,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pjmedia_aud_stream__bindgen_ty_1 {
    pub drv_idx: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct pjmedia_aud_test_stat {
    pub frame_cnt: ::std::os::raw::c_uint,
    pub min_interval: ::std::os::raw::c_uint,
    pub max_interval: ::std::os::raw::c_uint,
    pub avg_interval: ::std::os::raw::c_uint,
    pub dev_interval: ::std::os::raw::c_uint,
    pub max_burst: ::std::os::raw::c_uint,
}
#[repr(C)]
pub struct pjmedia_aud_test_results {
    pub rec: pjmedia_aud_test_stat,
    pub play: pjmedia_aud_test_stat,
    pub rec_drift_per_sec: pj_int32_t,
}
extern "C" {
    pub fn pjmedia_aud_test(
        param: *const pjmedia_aud_param,
        result: *mut pjmedia_aud_test_results,
    ) -> pj_status_t;
}